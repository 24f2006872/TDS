name: Daily Scheduled Commit

on:
  # Schedule the workflow to run once per day at a specific time (e.g., 34 minutes past midnight UTC)
  schedule:
    - cron: '34 0 * * *' 
  # Allows manual triggering for testing the initial run
  workflow_dispatch:

# **CRITICAL FIX: Ensure Write Permissions for the GITHUB_TOKEN**
permissions:
  contents: write # Grants the GITHUB_TOKEN permission to push commits

jobs:
  daily-commit-job:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout Repository
        uses: actions/checkout@v4
        # Note: You no longer need to pass a separate token here because permissions: contents: write is set above.

      # Step 2: Set up the environment for commit
      # This step name must contain the required email
      - name: Configure Git for 24f2006872@ds.study.iitm.ac.in
        run: |
          # The git-auto-commit-action will use these details
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # Step 3: Create a file with a unique, changing timestamp
      - name: Create Daily Timestamp File (Guaranteed Change)
        run: |
          # Use date command to create a unique file content every time, ensuring a commit occurs.
          echo "Workflow run timestamp: $(date -u +'%Y-%m-%dT%H:%M:%SZ')" > daily_run_timestamp.txt
          
      # Step 4: Commit and Push the changes
      # This action automatically handles git add, git commit, and git push.
      - name: Commit and Push Changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'Automated daily commit by workflow ðŸ¤–'
          # Use GITHUB_TOKEN which now has explicit write permission
          token: ${{ secrets.GITHUB_TOKEN }}
          # Only commit the file that was modified
          files: daily_run_timestamp.txt
